{"Kernels":{"Kernel_0":{"Body":["<badref> = call addrspace(0) i32 @rand() #-1","<badref> = call addrspace(0) i32 @MemoryRead(i32 0)","<badref> = inttoptr i32 %1 to i32**","<badref> = load i32*, i32** %2","<badref> = call addrspace(0) i32 @MemoryRead(i32 1)","<badref> = inttoptr i32 %4 to i32*","<badref> = load i32, i32* %5","<badref> = sext i32 %15 to i64","<badref> = getelementptr inbounds i32, i32* %14, i64 %16","store i32* %8, i32** <badref>","<badref> = call addrspace(0) i32 @MemoryWrite(i32 1)","<badref> = inttoptr i32 %9 to i32*","store i32 %0, i32* %10","<badref> = call addrspace(0) i32 @MemoryRead(i32 1)","<badref> = inttoptr i32 %11 to i32*","<badref> = load i32, i32* %12","<badref> = add nsw i32 %18, 1","<badref> = call addrspace(0) i32 @MemoryWrite(i32 0)","<badref> = inttoptr i32 %15 to i32*","store i32 %14, i32* %16"],"Init":[],"Loop":["<badref> = load i32, i32* %3, align 4","<badref> = icmp slt i32 %11, 1024"],"MemoryRead":{"Body":["%1 = load i32**, i32*** @0","%2 = ptrtoint i32** %1 to i32","%3 = load i32*, i32** @1","%4 = ptrtoint i32* %3 to i32","%5 = icmp eq i32 %0, 1","%6 = select i1 %5, i32 %4, i32 %2","ret i32 %6"],"Inputs":["i32 %0"]},"MemoryWrite":{"Body":["%1 = load i32*, i32** @1","%2 = ptrtoint i32* %1 to i32","%3 = load i32*, i32** @2","%4 = ptrtoint i32* %3 to i32","%5 = icmp eq i32 %0, 1","%6 = select i1 %5, i32 %4, i32 %2","ret i32 %6"],"Inputs":["i32 %0"]}},"Kernel_1":{"Body":["<badref> = call addrspace(0) i32 @MemoryRead.1(i32 0)","<badref> = inttoptr i32 %0 to i32**","<badref> = load i32*, i32** %1","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 2)","<badref> = inttoptr i32 %3 to i32*","<badref> = load i32, i32* %4","<badref> = sub nsw i32 %23, 1","<badref> = sext i32 %24 to i64","<badref> = getelementptr inbounds i32, i32* %22, i64 %25","store i32* %8, i32** <badref>","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 3)","<badref> = inttoptr i32 %9 to i32*","<badref> = load i32, i32* %10","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 0)","<badref> = inttoptr i32 %12 to i32**","<badref> = load i32*, i32** %13","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 2)","<badref> = inttoptr i32 %15 to i32*","<badref> = load i32, i32* %16","<badref> = sext i32 %29 to i64","<badref> = getelementptr inbounds i32, i32* %28, i64 %30","store i32* %19, i32** <badref>","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 4)","<badref> = inttoptr i32 %20 to i32*","<badref> = load i32, i32* %21","<badref> = add nsw i32 %27, %32","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 0)","<badref> = inttoptr i32 %24 to i32**","<badref> = load i32*, i32** %25","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 2)","<badref> = inttoptr i32 %27 to i32*","<badref> = load i32, i32* %28","<badref> = add nsw i32 %35, 1","<badref> = sext i32 %36 to i64","<badref> = getelementptr inbounds i32, i32* %34, i64 %37","store i32* %32, i32** <badref>","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 5)","<badref> = inttoptr i32 %33 to i32*","<badref> = load i32, i32* %34","<badref> = add nsw i32 %33, %39","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 1)","<badref> = inttoptr i32 %37 to i32**","<badref> = load i32*, i32** %38","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 2)","<badref> = inttoptr i32 %40 to i32*","<badref> = load i32, i32* %41","<badref> = sub nsw i32 %42, 1","<badref> = sext i32 %43 to i64","<badref> = getelementptr inbounds i32, i32* %41, i64 %44","store i32* %45, i32** <badref>","<badref> = call addrspace(0) i32 @MemoryWrite.2(i32 1)","<badref> = inttoptr i32 %46 to i32*","store i32 %36, i32* %47","<badref> = call addrspace(0) i32 @MemoryRead.1(i32 2)","<badref> = inttoptr i32 %48 to i32*","<badref> = load i32, i32* %49","<badref> = add nsw i32 %46, 1","<badref> = call addrspace(0) i32 @MemoryWrite.2(i32 0)","<badref> = inttoptr i32 %52 to i32*","store i32 %51, i32* %53"],"Init":[],"Loop":["<badref> = load i32, i32* %4, align 4","<badref> = icmp slt i32 %20, 1023"],"MemoryRead":{"Body":["%1 = load i32**, i32*** @3","%2 = ptrtoint i32** %1 to i32","%3 = load i32**, i32*** @4","%4 = ptrtoint i32** %3 to i32","%5 = icmp eq i32 %0, 1","%6 = select i1 %5, i32 %4, i32 %2","%7 = load i32*, i32** @5","%8 = ptrtoint i32* %7 to i32","%9 = icmp eq i32 %0, 2","%10 = select i1 %9, i32 %8, i32 %6","%11 = load i32*, i32** @6","%12 = ptrtoint i32* %11 to i32","%13 = icmp eq i32 %0, 3","%14 = select i1 %13, i32 %12, i32 %10","%15 = load i32*, i32** @7","%16 = ptrtoint i32* %15 to i32","%17 = icmp eq i32 %0, 4","%18 = select i1 %17, i32 %16, i32 %14","%19 = load i32*, i32** @8","%20 = ptrtoint i32* %19 to i32","%21 = icmp eq i32 %0, 5","%22 = select i1 %21, i32 %20, i32 %18","ret i32 %22"],"Inputs":["i32 %0"]},"MemoryWrite":{"Body":["%1 = load i32*, i32** @5","%2 = ptrtoint i32* %1 to i32","%3 = load i32*, i32** @9","%4 = ptrtoint i32* %3 to i32","%5 = icmp eq i32 %0, 1","%6 = select i1 %5, i32 %4, i32 %2","ret i32 %6"],"Inputs":["i32 %0"]}}}}