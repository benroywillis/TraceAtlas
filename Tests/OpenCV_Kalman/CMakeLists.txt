add_executable(Kalman main.cpp)
target_include_directories(Kalman PRIVATE $ENV{DASH_ROOT}/include/opencv4/)

add_library(Opencv_imgproc STATIC IMPORTED)
set_target_properties(Opencv_imgproc PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_imgproc.a)
add_library(Opencv_videoio STATIC IMPORTED)
set_target_properties(Opencv_videoio PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_videoio.a)
add_library(Opencv_core STATIC IMPORTED)
set_target_properties(Opencv_core PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_core.a)
add_library(Opencv_dnn STATIC IMPORTED)
set_target_properties(Opencv_dnn PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_dnn.a)
add_library(Opencv_stitching STATIC IMPORTED)
set_target_properties(Opencv_stitching PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_stitching.a)
add_library(Opencv_flann STATIC IMPORTED)
set_target_properties(Opencv_flann PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_flann.a)
add_library(Opencv_calib3d STATIC IMPORTED)
set_target_properties(Opencv_calib3d PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_calib3d.a)
add_library(Opencv_photo STATIC IMPORTED)
set_target_properties(Opencv_photo PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_photo.a)
add_library(Opencv_imgcodecs STATIC IMPORTED)
set_target_properties(Opencv_imgcodecs PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_imgcodecs.a)
add_library(Opencv_video STATIC IMPORTED)
set_target_properties(Opencv_video PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_video.a)
add_library(Opencv_highgui STATIC IMPORTED)
set_target_properties(Opencv_highgui PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_highgui.a)
add_library(Opencv_objdetect STATIC IMPORTED)
set_target_properties(Opencv_objdetect PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_objdetect.a)
add_library(Opencv_ml STATIC IMPORTED)
set_target_properties(Opencv_ml PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_ml.a)
add_library(Opencv_features2d STATIC IMPORTED)
set_target_properties(Opencv_features2d PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libopencv_features2d.a)
add_library(Quirc STATIC IMPORTED)
set_target_properties(Quirc PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libquirc.a)
add_library(Libwebp STATIC IMPORTED)
set_target_properties(Libwebp PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibwebp.a)
add_library(Libprotobuf STATIC IMPORTED)
set_target_properties(Libprotobuf PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibprotobuf.a)
add_library(PNG STATIC IMPORTED)
set_target_properties(PNG PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibpng.a)
add_library(IlmImf STATIC IMPORTED)
set_target_properties(IlmImf PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libIlmImf.a)
add_library(Libjasper STATIC IMPORTED)
set_target_properties(Libjasper PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibjasper.a)
add_library(Libtiff STATIC IMPORTED)
set_target_properties(Libtiff PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibtiff.a)
add_library(JPEG STATIC IMPORTED)
set_target_properties(JPEG PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/liblibjpeg-turbo.a)
add_library(Ittnotify STATIC IMPORTED)
set_target_properties(Ittnotify PROPERTIES IMPORTED_LOCATION $ENV{DASH_ROOT}alib/libittnotify.a)

target_link_libraries(Kalman PRIVATE Quirc Libwebp PNG IlmImf Libjasper Libprotobuf Libtiff JPEG Ittnotify Opencv_imgproc Opencv_core Opencv_dnn Opencv_features2d Opencv_flann Opencv_highgui Opencv_imgcodecs Opencv_ml Opencv_objdetect Opencv_photo Opencv_stitching Opencv_video Opencv_videoio)
set_target_properties(Kalman PROPERTIES LINK_FLAGS "-Wl,--plugin-opt=emit-llvm")
target_compile_options(Kalman PRIVATE "-flto")
InjectTracer(Kalman)

add_test(NAME Kalman_Trace COMMAND Kalman-trace)

add_test(NAME Kalman_cartographer COMMAND cartographer -i ${CMAKE_CURRENT_BINARY_DIR}/raw.trc -b $<TARGET_FILE:Kalman> -k ${CMAKE_CURRENT_BINARY_DIR}/kernel.json)
set_tests_properties(Kalman_cartographer PROPERTIES DEPENDS Kalman_Trace)

add_test(NAME Kalman_tik COMMAND tik -j ${CMAKE_CURRENT_BINARY_DIR}/kernel.json -o ${CMAKE_CURRENT_BINARY_DIR}/tik.bc $<TARGET_FILE:Kalman>)
set_tests_properties(Kalman_tik PROPERTIES DEPENDS Kalman_cartographer)
